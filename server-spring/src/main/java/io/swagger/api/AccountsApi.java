/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.18).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.annotations.*;
import io.swagger.model.User;

import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-03-31T11:11:07.248176+02:00[Europe/Warsaw]")
@Api(value = "accounts", description = "the accounts API")
public interface AccountsApi {

    @ApiOperation(value = "Receive user Information", nickname = "accountsUserIDGet", notes = "", response = Object.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Returns a user data", response = Object.class),
        @ApiResponse(code = 404, message = "User not existing") })
    @RequestMapping(value = "/accounts",
        produces = { "*/*" }, 
        method = RequestMethod.GET)
    ResponseEntity<User> accountsUserIDGet(
    		@Min(1)@ApiParam(value = "The user ID.",required=true, allowableValues="") 
    		Long id
    		);


    @ApiOperation(value = "Update User user Information", nickname = "accountsUserIDPost", notes = "", response = Object.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Sets a user data", response = Object.class),
        @ApiResponse(code = 404, message = "User not existing") })
    @RequestMapping(value = "/accounts",
        produces = { "*/*" }, 
        method = RequestMethod.POST)
    ResponseEntity<Object> accountsUserIDPost(
    		@Min(1)@ApiParam(value = "The user ID.",required=true, allowableValues="") 
    		@Valid @RequestBody User body
    		);

}

